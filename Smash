//import processing.sound.*;
//SoundFile sound;
PImage backg;
PImage cursor;
PFont font;
double shipPos;
double shipPos1;
private Melees a = new Melees();
private Melees a1 = new Melees();
boolean firstScreen;
boolean startGame;
PImage ald;
PImage zrich;
PImage sam;
PImage kurz;
PImage logo; 
PImage smashball;
boolean noStartGame;
int choice;
int choice1;
int health1 = 800;
int health2 = 800;

boolean r1;
boolean r2;

Player p1 = new Player(300, 10);
Player p2 = new Player(500, 10);
private boolean[] keys = new boolean[8];
boolean onPlat =false;
boolean onPlat2 =false;
int character;
void setup() {
  size(800, 600);

  font = loadFont("f.vlw");
  backg = loadImage("bg.jpg");
  ald = loadImage("ald.png");
  ald.resize(200, 300);
  zrich = loadImage("zrich.png");
  sam = loadImage("sam.png");
  kurz = loadImage("kurz.png");
  logo = loadImage("logo.png");
  smashball = loadImage("smashball.png");
  //cursor = loadImage("cursor.png");
 // sound = new SoundFile(this, "song.mp4");

  character = 1;








  drawStartScreen();

  firstScreen = true;
  startGame = false;
  noStartGame = true;
}

//THIS IS YOUR MAIN ESSENTIALLY
//draw is a loop if u didn't know. 
void draw() {
  
  if (firstScreen) {
    //sound.play();
    drawStartScreen();
   // drawCursor(0);
  }
  if (mousePressed &&  (mouseX >= 250 && mouseX <= 550) && 
    (mouseY >=375 && mouseY <= 445 )) {
    mousePressed = false;
    firstScreen = false;
  }

  if (firstScreen == false) {
    drawCharSelection();
   // drawCursor(0);
  }




  //GAME CODE:
  if (mousePressed &&  (mouseX >= 300 && mouseX <= 500) && (mouseY >=450 && mouseY <=550 )) 
    noStartGame=false;


  if (noStartGame==false) {

    platCollide();
    drawBackground();
    drawPlatforms();
    drawPlayer(p1, choice);
    p1.gravity(onPlat);
    drawPlayer(p2, choice1);
    p2.gravity(onPlat2);
    platCollide();
    drawHealth(health1, health2);
    gotHit(p2);




    if (keys[0]==true)
      p1.move("RIGHT");
    if (keys[1]==true)
      p1.move("LEFT");
    if (keys[2]==true)
      p1.move("DOWN");

    if (keys[5]==true)
      p2.move("RIGHT");
    if (keys[3]==true)
      p2.move("LEFT");
    if (keys[4]==true)
      p2.move("DOWN");

    if (keys[6]==true) {
      a.add(new Melee(p1.getX()+p1.getWidth()+60, p1.getY()-55, 5));
      shipPos = p1.getX();
      keys[6]=false;
    }
    if (keys[7]==true) {
      a.add(new Melee(p2.getX()+p2.getWidth()+60, p2.getY()-55, 5));
      shipPos1 = p2.getX();
      println("BONNIE");
      keys[7]=false;
      
    }

    for (int i = 0; i < a.getList().size(); i++) {
      if (a.getList().get(i).getX()>shipPos+92) {
        a.remove(i);
      }
    }
    
    for (int i = 0; i < a1.getList().size(); i++) {
      if (a1.getList().get(i).getX()>shipPos1+92) {
        a1.remove(i);
      }
    }
    a.drawEmAll();
    a1.drawEmAll();
    
    
    
      a.moveEmAll("RIGHT");
      a1.moveEmAll("RIGHT");
  }
}

void drawPlayer(Player p, int choice) {
  if (choice ==1)
    p.draw(ald, 1);

  if (choice == 2)
    p.draw(zrich, 2);

  if (choice == 3)
    p.draw(sam, 3);

  if (choice == 4)
    p.draw(kurz, 4);
}

void drawHealth(int h1, int h2) {

  textSize(20);
  fill(255, 216, 82);
  text("PLAYER 1 HEALTH: ", 90, 30 );
  stroke(0);
  fill(82, 216, 255);
  rect(10, 40, h1/4, 15);


  textSize(20);
  fill(255, 216, 82);
  text("PLAYER 2 HEALTH: ", 650, 30 );
  stroke(0);
  fill(82, 216, 255);
  rect(570, 40, h2/4, 15);




}
public void gotHit(Player p2){
    for (int i = 0; i < a.getList().size(); i++) {
    if (a.getList().get(i).getX()>p2.getX()-10 && a.getList().get(i).getX()<p2.getX()+40) {
      if (a.getList().get(i).getY()>p2.getY()-70 && a.getList().get(i).getY()<p2.getY()+30) {
        if (health2>0) {
          health2-=10;
          p2.move("RIGHT");
          p2.move("RIGHT");
          a.resetSize();
        }
      }
      // mousePressed = false;
    }
  }
}


public void drawStartScreen() {
 
  textFont(font);
  textSize(25);
  background(255);

  //Logo
  logo.resize(250, 300);
  image(logo, 270.5, -10);
  //Smashball
  smashball.resize(350, 350);
  image(smashball, -40, -50);


  textAlign(CENTER);
  fill(0);
  text("Welcome to EA Smash!\nPress continue to pick your characters", width/2, height/2 ); 



  //Continue Button
  stroke(255, 0, 0);
  noFill();
  rect(250, 375, 300, 70);
  fill(255, 0, 0);
  text("CONTINUE", 400, 420);
}

public void drawCharSelection() {
  background(255);
  textFont(font);
  fill(0, 100, 200);
  textAlign(CENTER);
  text("SELECT YOUR CHARACTER!", 400, 50);

  //Actual Characters

  stroke(0, 0, 255, 30);
  noFill();

  //Char 1
  rect(35, 65, 170, 300);
  image(ald, 25, 70);




  //Char 2
  rect(225, 65, 170, 300);
  image(zrich, 60, -40);




  //Char 3

  rect(415, 65, 170, 300);
  sam.resize(165, 280);
  image(sam, 420, 102);

  //Char 4
  rect(605, 65, 170, 300);
  kurz.resize(450, 450);
  image(kurz, 600, 110);
  fill(130, 100, 0);
  textSize(25);
  text("Donkey Kurz", 682.5, 350);
  rect(620, 352.5, 125, 2.5);




  //Continue Button
  stroke(255, 0, 0);
  noFill();
  rect(250, 500, 300, 70);
  fill(255, 0, 0);
  text("CONTINUE", 400, 540);


  if (character==1) {
    textFont(font);
    fill(0, 100, 200);
    textAlign(CENTER);
    text("SELECT CHARACTER ONE!", 400, 480);


    if (mousePressed &&  (mouseX >= 35 && mouseX <= 205) && 
      (mouseY >=65 && mouseY <= 365 )) {
      mousePressed= false;
      r1 = true;
      choice = 1;
      character = 2;
    }

    if (mousePressed &&  (mouseX >= 225 && mouseX <= 395) && 
      (mouseY >=65 && mouseY <= 365 )) {
      mousePressed= false;
      r1 = true;
      choice = 2;
      character = 2;
    }

    if (mousePressed &&  (mouseX >= 415 && mouseX <= 585) && 
      (mouseY >=65 && mouseY <= 365 )) {
      mousePressed= false;
      r1 = true;
      choice = 3;
      character = 2;
    }

    if (mousePressed &&  (mouseX >= 605 && mouseX <= 775) && 
      (mouseY >=65 && mouseY <= 365 )) {
      mousePressed= false;
      r1 = true;
      choice = 4;
      character=2;
    }
  } else if (character==2) {
    textFont(font);
    fill(0, 100, 200);
    textAlign(CENTER);
    text("SELECT CHARACTER TWO!", 400, 480);
    if (mousePressed &&  (mouseX >= 35 && mouseX <= 205) && 
      (mouseY >=65 && mouseY <= 365 )) {
      mousePressed= false;
      r2=true;
      choice1 = 1;
      println("choice 1: \t");
    }

    if (mousePressed &&  (mouseX >= 225 && mouseX <= 395) && 
      (mouseY >=65 && mouseY <= 365 )) {
      mousePressed= false;
      r2 = true;
      choice1 = 2;
      println("choice 2: \t");
    }

    if (mousePressed &&  (mouseX >= 415 && mouseX <= 585) && 
      (mouseY >=65 && mouseY <= 365 )) {
      mousePressed= false;
      r2 = true;
      choice1 = 3;
    }

    if (mousePressed &&  (mouseX >= 605 && mouseX <= 775) && 
      (mouseY >=65 && mouseY <= 365 )) {
      mousePressed= false;
      r2 = true;
      choice1 = 4;
    }
  }
  if (r1 && r2) {
    noStroke();
    fill(255);
    rect(0, 400, width, 90);
    textFont(font);
    fill(255, 216, 82);
    textAlign(CENTER);
    text("READY!", 400, 480);
  }
}
/*
void drawCursor(int num) {
  noCursor();
  image(cursor, mouseX-5, mouseY-5);
}
*/


void drawGame() {
  image (backg, 0, 0);
  fill(0);
  rect(0, 535, width, height);
}
public void drawBackground() {
  image (backg, 0, 0);
  fill(0);
  rect(0, 535, width, height);
}
void drawPlatforms()
{
  fill(100, 0, 0);
  rect(100, 530, 200, 10);
  rect(width-300, 530, 200, 10);
  rect(300, 430, 200, 10);
}
void platCollide() {


  if ((p1.getY()+30 >= 530 && p1.getY()+30 <= 540 && (p1.getX()+30>=100 && p1.getX()<=300))) {
    onPlat=true;

    p1.setY(500);


    p1.jumpReset();
  } else if (p1.getY()+30 >= 530 && p1.getY()+30 <= 540 && (p1.getX()+30>=500 && p1.getX()<=700)) {
    onPlat=true;
    p1.setY(500);
    
    p1.jumpReset();
  } else if ((p1.getY()+30 >= 430&&p1.getY()+30 <= 440) && (p1.getX()+30>=300 && p1.getX()<=500)) {
    onPlat=true;
    p1.setY(400);

    p1.jumpReset();
    //p1.setyVel(0);
  } else {
    onPlat=false;

    //p1.setyVel(1);
  }

  if ((p2.getY()+30 >= 530 && p2.getY()+30 <= 540 && (p2.getX()+30>=100 && p2.getX()<=300))) {
    onPlat2=true;

    p2.setY(500);


    p2.jumpReset();
    //p1.setyVel(0);
  } else if (p2.getY()+30 >= 530 && p2.getY()+30 <= 540 && (p2.getX()+30>=500 && p2.getX()<=700)) {
    onPlat2=true;
    p2.setY(500);

    p2.jumpReset();
    //p1.setyVel(0);
  } else if ((p2.getY()+30 >= 430&&p2.getY()+30 <= 440) && (p2.getX()+30>=300 && p2.getX()<=500)) {
    onPlat2=true;
    p2.setY(400);
    //println("bonnie");
    p2.jumpReset();
  } else {
    onPlat2=false;
    //println("bill");
  }
}


void keyPressed() {
  // if(key == CODED){
  if (keyCode == RIGHT ) 
  {
    keys[0]=true;
  }
  if (keyCode == LEFT ) 
  {
    keys[1]=true;
  }
  if (keyCode == DOWN ) 
  {
    keys[2]=true;
  }
  if (key == 'a' || key=='A' ) 
  {
    keys[3]=true;
  }
  if (key == 's' || key=='S' ) 
  {
    keys[4]=true;
  }
  if (key == 'd' || key=='D' ) 
  {
    keys[5]=true;
  }
  if (key == 'm' || key=='M' ) 
  {
    keys[6]=true;
  }
  if (key == 'f' || key=='f' ) 
  {
    
    keys[7]=true;
  }
  if (keyCode == UP ) 
  {

    p1.move("UP");
  }
  if (key=='w'||key=='W') {
    p2.move("UP");
  }
}
void keyReleased() {
  //if(key == CODED){
  if (keyCode == RIGHT ) 
  {
    keys[0]=false;
  }
  if (keyCode == LEFT ) 
  {
    keys[1]=false;
  }
  if (keyCode == DOWN ) 
  {
    keys[2]=false;
  }
  if (key == 'a' || key=='A' ) 
  {
    keys[3]=false;
  }
  if (key == 's' || key=='S' ) 
  {
    keys[4]=false;
  }
  if (key == 'd' || key=='D' ) 
  {
    keys[5]=false;
  }
  if (key == 'm' || key=='M' ) 
  {
    
    keys[6]=false;
  }
  if (key == 'f' || key=='f' ) 
  {
    
    keys[7]=false;
  }
}
